{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# üå¶Ô∏è –ê–Ω–∞–ª–∏–∑ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n",
    "### –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ú–æ—Å–∫–≤—ã, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ –∏ –°–∞–º–∞—Ä—ã\n",
    "###### –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {{current_date}}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import plotly.express as px\n",
    "from IPython.display import display, HTML\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª—è\n",
    "plt.style.use('seaborn')\n",
    "sns.set_palette(\"husl\")\n",
    "pd.options.display.float_format = '{:.1f}'.format\n",
    "\n",
    "display(HTML(\"\"\"\n",
    "<style>\n",
    "    .header {\n",
    "        color: #2e86c1;\n",
    "        font-family: Verdana;\n",
    "    }\n",
    "    .plot-title {\n",
    "        color: #5d6d7e;\n",
    "        font-weight: bold;\n",
    "        font-size: 16px;\n",
    "    }\n",
    "</style>\n",
    "\"\"\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üìä –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã\n",
    "fig_temp = px.line(weather, x='datetime', y='temp_c', color='city', \n",
    "                  title='<b>–°—É—Ç–æ—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º</b>',\n",
    "                  labels={'temp_c':'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)', 'datetime':'–î–∞—Ç–∞'},\n",
    "                  template='plotly_white',\n",
    "                  height=500)\n",
    "fig_temp.update_layout(hovermode=\"x unified\")\n",
    "fig_temp.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üåßÔ∏è –ê–Ω–∞–ª–∏–∑ –æ—Å–∞–¥–∫–æ–≤"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# –ö—Ä—É–≥–æ–≤—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –æ—Å–∞–¥–∫–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º\n",
    "fig_pie = px.pie(weather.groupby('city')['rain_mm'].sum().reset_index(), \n",
    "                 values='rain_mm', names='city',\n",
    "                 title='<b>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–∞–¥–∫–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º</b>',\n",
    "                 hole=0.3,\n",
    "                 color_discrete_sequence=px.colors.sequential.RdBu)\n",
    "fig_pie.update_traces(textposition='inside', textinfo='percent+label')\n",
    "fig_pie.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üå¨Ô∏è –í–µ—Ç—Ä–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Wind rose chart\n",
    "fig_wind = px.bar_polar(weather, r=\"wind_speed_kmh\", theta=\"datetime\",\n",
    "                        color=\"city\", template=\"plotly_dark\",\n",
    "                        title=\"<b>–†–æ–∑–∞ –≤–µ—Ç—Ä–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º</b>\",\n",
    "                        color_discrete_sequence=px.colors.qualitative.Pastel)\n",
    "fig_wind.update_layout(polar=dict(radialaxis=dict(visible=True)))\n",
    "fig_wind.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üìà –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–µ–æ–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Parallel coordinates plot\n",
    "fig_parallel = px.parallel_coordinates(weather, \n",
    "                                     color=\"temp_c\",\n",
    "                                     dimensions=['temp_c', 'humidity', 'pressure', 'wind_speed_kmh'],\n",
    "                                     color_continuous_scale=px.colors.diverging.Tealrose,\n",
    "                                     title=\"<b>–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Ç–µ–æ–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</b>\")\n",
    "fig_parallel.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üìÖ –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ –¥–Ω—è–º"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calendar heatmap\n",
    "weather['date'] = weather['datetime'].dt.date\n",
    "daily_weather = weather.groupby(['city', 'date']).agg({\n",
    "    'temp_c': 'mean',\n",
    "    'rain_mm': 'sum'\n",
    "}).reset_index()\n",
    "\n",
    "fig_calendar = px.density_heatmap(daily_weather, x=\"date\", y=\"city\", \n",
    "                                z=\"temp_c\", \n",
    "                                histfunc=\"avg\",\n",
    "                                title=\"<b>–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –ø–æ –¥–Ω—è–º</b>\",\n",
    "                                color_continuous_scale=\"viridis\")\n",
    "fig_calendar.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## üîç –í—ã–≤–æ–¥—ã"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π —Ä–µ–∂–∏–º**:\n",
    "   - –°–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –°–∞–º–∞—Ä–µ\n",
    "   - –°–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ\n",
    "   \n",
    "2. **–û—Å–∞–¥–∫–∏**:\n",
    "   - –ù–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ\n",
    "   - –í –°–∞–º–∞—Ä–µ —Å–∞–º—ã–π —Å—É—Ö–æ–π –∫–ª–∏–º–∞—Ç\n",
    "   \n",
    "3. **–í–µ—Ç—Ä–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è**:\n",
    "   - –°–∞–º—ã–µ —Å–∏–ª—å–Ω—ã–µ –≤–µ—Ç—Ä–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã –¥–ª—è –ú–æ—Å–∫–≤—ã\n",
    "   - –í –°–∞–º–∞—Ä–µ –Ω–∞–∏–±–æ–ª–µ–µ —Å–ø–æ–∫–æ–π–Ω—ã–µ —É—Å–ª–æ–≤–∏—è"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
